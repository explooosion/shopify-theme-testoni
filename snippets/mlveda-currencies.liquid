{% if settings.mlvedaACS_enable %}

{% if shop.enabled_currencies.size > 1 %}

<!-- multi currency code execution -->

<script type="text/javascript">
document.write('<scr'+'ipt src="//mlveda-shopifyapps.s3.amazonaws.com/multiCurrencyPricing/js/{{ shop.permanent_domain | replace: '.myshopify.com', '' }}_currencies.js?rnd='+Math.floor((Math.random() * 10000000000) + 1)+'" type="text/javascript"></scr'+'ipt>');
document.write('<scr'+'ipt src=\"/apps/MultiCurrency/New/jquery.currencies.min.js?rnd='+Math.floor((Math.random() * 10000000000) + 1)+'\" type=\"text/javascript\"></scr'+'ipt>');
</script>
<script>
  
var ACSCurrency = Currency;
function mlvedaCreateCookie(name, value, days) {
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        var expires = "; expires=" + date.toGMTString();
    }
    else
        var expires = "";
    document.cookie = name + "=" + value + expires + "; path=/";
}
function mlvedaReadCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ')
            c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0)
            return c.substring(nameEQ.length, c.length);
    }
    return null;
}
function mlvedaEraseCookie(name) {
    createCookie(name, "", -1);
}
function roundCurrency() {
  
$acs('.money').each(function(){
       if (ACSCurrency.currentCurrency === "JOD" || ACSCurrency.currentCurrency === "KWD" || ACSCurrency.currentCurrency === "BHD") {
         var moneyraw = parseFloat($acs(this).html().replace(/[^0-9]/g, ""), 10) / 10 ;
       }
       else if( ACSCurrency.currentCurrency === "KRW" || ACSCurrency.currentCurrency === "JPY" || ACSCurrency.currentCurrency === "SEK" || ACSCurrency.currentCurrency === "HUF" || ACSCurrency.currentCurrency === "ISK") {
         var moneyraw = parseFloat($acs(this).html().replace(/[^0-9]/g, ""), 10) * 100 ;
       } else {
         var moneyraw = parseFloat($acs(this).html().replace(/[^0-9]/g, ""), 10)  ;
       }
       //var moneyrounded = ((Math.round(moneyraw / 100)) - 1 + {{ settings.mlvedaACS_roundDecimalValue }}) * 100 ;
var moneyrounded;
       if(ACSCurrency.currentCurrency === "JPY") {
        moneyrounded = Math.ceil(moneyraw / 10000) * 10000;
       } else if(ACSCurrency.currentCurrency === "KRW") {
        moneyrounded = Math.ceil(moneyraw / 100000) * 100000;
       } 
     else if(ACSCurrency.currentCurrency === "EUR"){
          moneyrounded = Math.ceil(moneyraw / 100) * 100 - 5;
       }
	else {
          moneyrounded = Math.ceil(moneyraw / 100) * 100;
       }
       if(ACSCurrency.format === "money_with_currency_format") {
         var acuree = ACSCurrency.formatMoney(moneyrounded, ACSCurrency.moneyFormats[ACSCurrency.currentCurrency].money_with_currency_format)
       }
       else {
         var acuree = ACSCurrency.formatMoney(moneyrounded, ACSCurrency.moneyFormats[ACSCurrency.currentCurrency].money_format)
       }        $acs(this).html(acuree);
     });    
}
{% if settings.mlvedaACS_hideDecimal %}
  var firstTimeSwitchFlag=0;
{% endif %}
var onetimecallflag = true;
$acs('span.money span.money').each(function() {
  $acs(this).parents('span.money').removeClass('money');
});
function mlvedaload() {
if("undefined" != typeof mlvedaFlagCalled && mlvedaFlagCalled && "undefined" != typeof window.mlvedadefaultcurrency){
             if(shopify_supported_currencies.indexOf(ACSCurrency.cookie.read()) != -1) {	             
             bindmlvedaevents();
             calculateCartPrice(null);
             }
  
{% if settings.mlvedaACS_currencyFormat %}
ACSCurrency.format = '{{ settings.mlvedaACS_currencyFormat }}';
{% endif %}
var shopCurrency = '{{ shop.currency }}';
/* Sometimes merchants change their shop currency, let's tell our JavaScript file */
ACSCurrency.moneyFormats[shopCurrency].money_with_currency_format = {{ shop.money_with_currency_format | strip_html | json }};
ACSCurrency.moneyFormats[shopCurrency].money_format = {{ shop.money_format | strip_html | json }};
  
{% if settings.mlvedaACS_hideDecimal %}
if(firstTimeSwitchFlag==0) {
  var local_supported_currencies = window.supported_currencies.split(" ");
  for(var i=0; i<local_supported_currencies.length; i++)
  {
    if(local_supported_currencies[i] !== shopCurrency && local_supported_currencies[i] !== "JOD" && local_supported_currencies[i] !== "KWD" && local_supported_currencies[i] !== "BHD" && local_supported_currencies[i] !== "JPY" ) {
      if(ACSCurrency.moneyFormats[local_supported_currencies[i]] && ACSCurrency.moneyFormats[local_supported_currencies[i]].money_with_currency_format.indexOf("amount_no_decimals") == -1) {
        ACSCurrency.moneyFormats[local_supported_currencies[i]].money_with_currency_format = ACSCurrency.moneyFormats[local_supported_currencies[i]].money_with_currency_format.replace("amount","amount_no_decimals");
        ACSCurrency.moneyFormats[local_supported_currencies[i]].money_format = ACSCurrency.moneyFormats[local_supported_currencies[i]].money_format.replace("amount","amount_no_decimals");
      }
    }
  }
  firstTimeSwitchFlag=1;
}
{% endif %}
/* Default currency */
var defaultCurrency = shopCurrency;
  
/* Cookie currency */
var cookieCurrency = null;//ACSCurrency.cookie.read();
var resetCurrencyCookie = mlvedaReadCookie("resetCurrencyCookie");
if (resetCurrencyCookie == null)
{
    cookieCurrency = null;
    mlvedaCreateCookie("resetCurrencyCookie", 1, 365);
}
  if(cookieCurrency == null) {
    if("undefined" != typeof window.temp_currency_array && window.temp_currency_array[0] !== window.mlvedadefaultcurrency && window.temp_currency_array[1] !== window.mlvedadefaultcurrency) {
      cookieCurrency = "{{ settings.mlvedaACS_defaultCurrency }}";
    }
    else {
      cookieCurrency = window.mlvedadefaultcurrency;
    }
  }
/* Fix for customer account pages */
$acs('span.money span.money').each(function() {
  $acs(this).parents('span.money').removeClass('money');
});
/* Saving the current price */
$acs('span.money').each(function() {
if(!$acs(this).attr('data-currency-{{ shop.currency }}'))
{
  $acs(this).attr('data-currency-{{ shop.currency }}', $acs(this).html());
}
});
// If there's no cookie.
if (cookieCurrency == null || cookieCurrency == shopCurrency) {
  if(cookieCurrency == shopCurrency) {
    ACSCurrency.currentCurrency = shopCurrency;
  }
  else if (shopCurrency !== defaultCurrency) {
    
	//console.log("From currencies : "+new Date().getTime());
  }

  else {
    ACSCurrency.currentCurrency = defaultCurrency;
  }
}
// If the cookie value does not correspond to any value in the currency dropdown.
else if ($acs('[name=currencies]').length && $acs('[name=currencies] option[value=' + cookieCurrency + ']').length === 0) {
  ACSCurrency.currentCurrency = shopCurrency;
  ACSCurrency.cookie.write(shopCurrency);
}
else if (cookieCurrency === shopCurrency) {
  ACSCurrency.currentCurrency = shopCurrency;
}
else {
  ACSCurrency.convertAll(shopCurrency, cookieCurrency);
	if(shopify_supported_currencies.indexOf(ACSCurrency.cookie.read()) == -1) {
  $acs(".mlvedaCartNote").css("display","block");
    }
  roundCurrency();
}
$acs('[name=currencies]').val(ACSCurrency.currentCurrency).change(function() {
  var newCurrency = $acs(this).val();
  if(ACSCurrency.currentCurrency!=shopCurrency) {
    ACSCurrency.convertAll(ACSCurrency.currentCurrency, shopCurrency);
    ACSCurrency.convertAll(shopCurrency, newCurrency);
  }
  else {
    ACSCurrency.convertAll(ACSCurrency.currentCurrency, newCurrency);
  }
  
  $acs('.selected-currency').text(ACSCurrency.currentCurrency);
  if(newCurrency != shopCurrency) {
    roundCurrency();
    if(shopify_supported_currencies.indexOf(ACSCurrency.cookie.read()) == -1) {
    $acs(".mlvedaCartNote").css("display","block");
    }
  } else {
    $acs(".mlvedaCartNote").css("display","none");
  }});
var original_selectCallback = window.selectCallback;
var selectCallback = function(variant, selector) {
  original_selectCallback(variant, selector);
  ACSCurrency.convertAll(shopCurrency, $acs('[name=currencies]').val());
  
  $acs('.selected-currency').text(ACSCurrency.currentCurrency);
};
$acs('.selected-currency').text(ACSCurrency.currentCurrency);
  if(onetimecallflag) {
  $acs('.single-option-selector').change(function() {
    mlvedaload();
  });
  $acs('.swatch').change(function() {
    mlvedaload();
  });
  $acs('.single-option-radio').change(function() {
    mlvedaload();
  });
if( typeof $ !== "undefined" ) {
  $(document).ajaxComplete(function(event, xhr, settings) {
     if( settings.url.indexOf("cart.js")!=-1 ) {
       setTimeout(function() {
         if(shopify_supported_currencies.indexOf(ACSCurrency.cookie.read()) != -1) {	             
             bindmlvedaevents();
             calculateCartPrice(xhr);
             }
         mlvedaload();
       }, 1000);
     }
   });
}
//$acs(".pick_currency:visible").css("height",$acs(".pick_currency").parent(":visible").height());
//$acs(".pick_currency:visible").css("line-height",$acs(".pick_currency").parent(":visible").height());
//$acs("[name=currencies]:visible").css("height",$acs(".pick_currency").parent(":visible").height());
//$acs("[name=currencies]:visible").css("line-height",$acs(".pick_currency").parent(":visible").height());
  $acs("#currencies").niceSelect();
  $acs("#currencies1").niceSelect();
  $acs("#currencies2").niceSelect();
  onetimecallflag = false;
  }
  
  $m("<style type=\"text/css\">span.money{ display: inline; }</style>").appendTo("head");
  
                        }
}
function bindmlvedaevents() {
    if (mlvedaReadCookie("acscurrency") !== "{{ cart.currency.iso_code }}") {
        if ($acs("[name=checkout]").length > 0 && typeof $acs._data($acs("[name=checkout]")[0]).events !== "undefined" && typeof $acs._data($acs("[name=checkout]")[0]).events.click !== "undefined" && $acs._data($acs("[name=checkout]")[0]).events.click.length > 0) {
            var mlvedadonotbind = false;
            for (var i = 0; i < $acs._data($acs("[name=checkout]")[0]).events.click.length; i++) {
                if ($acs._data($acs("[name=checkout]")[0]).events.click[i].namespace === "mlvedaclick") {
                    mlvedadonotbind = true;
                }
            }
            if (!mlvedadonotbind) {
                $acs("[name=checkout]").on("click.mlvedaclick", function (e) {
                    $acs.ajax({
                        url: "/cart/update.js?currency=" + ACSCurrency.currentCurrency,
                        async: false,
                        success: function (result) {
                          window.location.href = "/checkout";
                        }
                    });
                });
            }
        } else {
            $acs("[name=checkout]").on("click.mlvedaclick", function (e) {
                $acs.ajax({
                    url: "/cart/update.js?currency=" + ACSCurrency.currentCurrency,
                    async: false,
                    success: function (result) {
                    }
                });
            });
        }

		if ($acs(".shopify-payment-button__button").length > 0 && typeof $acs._data($acs(".shopify-payment-button__button")[0]).events !== "undefined" && typeof $acs._data($acs(".shopify-payment-button__button")[0]).events.click !== "undefined" && $acs._data($acs(".shopify-payment-button__button")[0]).events.click.length > 0) {
            var mlvedadonotbind = false;
            for (var i = 0; i < $acs._data($acs(".shopify-payment-button__button")[0]).events.click.length; i++) {
                if ($acs._data($acs(".shopify-payment-button__button")[0]).events.click[i].namespace === "mlvedaclick") {
                    mlvedadonotbind = true;
                }
            }
            if (!mlvedadonotbind) {
                $acs(".shopify-payment-button__button").on("click.mlvedaclick", function (e) {
                    $acs.ajax({
                        url: "/cart/update.js?currency=" + ACSCurrency.currentCurrency,
                        async: false,
                        success: function (result) {
                          window.location.href = "/checkout";
                        }
                    });
                });
            }
        } else {
            $acs(".shopify-payment-button__button").on("click.mlvedaclick", function (e) {
                $acs.ajax({
                    url: "/cart/update.js?currency=" + ACSCurrency.currentCurrency,
                    async: false,
                    success: function (result) {
                    }
                });
            });
        }
    }
}
  
function calculateCartPrice(xhr) {
    var mlvedaCartJS = {};
  
  
    if(xhr !=  null) {
    mlvedaCartJS = JSON.parse(xhr.responseText);
  } else {
    $acs.ajax({
            url: "/cart.js",
            async: false,
            dataType: "json",
            success: function (result) {
                mlvedaCartJS = result;
        }
    });
  }
  
  
  
  
    var homeCurrency = {};
    $acs.ajax({
            url: "/cart/update.js?currency=" + mlvedaReadCookie("acscurrency"),
            async: false,
            dataType: "json",
            success: function (result) {
                for (i = 0; i < mlvedaCartJS.items.length; i++) {
                    homeCurrency[mlvedaCartJS.items[i].line_price] = result.items[i].line_price;
                  	homeCurrency[mlvedaCartJS.items[i].original_price] = result.items[i].original_price;
                }
                homeCurrency[mlvedaCartJS.total_price] = result.total_price;
                $acs('span.money').each(function () {
                        var convertedPrice = null;
                        if (!$acs(this).attr("data-currency-" + shopCurrency.toLowerCase())) {
                            key = $acs(this).html().replace(/[^0-9]/g, "");
                            convertedPrice = homeCurrency[key];
                          if (convertedPrice != null) {
                                $acs(this).attr("data-currency-" + mlvedaReadCookie("acscurrency").toLowerCase(), ACSCurrency.formatMoney(convertedPrice, ACSCurrency.moneyFormats[mlvedaReadCookie("acscurrency")].{{ settings.mlvedaACS_currencyFormat }}));
                          }
                      }
                });
        }
    });
}
  
</script>

{% else %}


<!-- Normal code execution -->

<script type="text/javascript">
document.write('<scr'+'ipt src=\"//mlveda-shopifyapps.s3.amazonaws.com/multiCurrencyPricing/js/currencies.js?rnd='+Math.floor((Math.random() * 10000000000) + 1)+'\" type=\"text/javascript\"></scr'+'ipt>');
document.write('<scr'+'ipt src=\"/apps/MultiCurrency/New/jquery.currencies.min.js?rnd='+Math.floor((Math.random() * 10000000000) + 1)+'\" type=\"text/javascript\"></scr'+'ipt>');
</script>

<script>
  
var ACSCurrency = Currency;
function mlvedaCreateCookie(name, value, days) {
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        var expires = "; expires=" + date.toGMTString();
    }
    else
        var expires = "";
    document.cookie = name + "=" + value + expires + "; path=/";
}

function mlvedaReadCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ')
            c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0)
            return c.substring(nameEQ.length, c.length);
    }
    return null;
}

function mlvedaEraseCookie(name) {
    createCookie(name, "", -1);
}

function roundCurrency() {
  
$acs('.money').each(function(){
       if (ACSCurrency.currentCurrency === "JOD" || ACSCurrency.currentCurrency === "KWD" || ACSCurrency.currentCurrency === "BHD") {
         var moneyraw = parseFloat($acs(this).html().replace(/[^0-9]/g, ""), 10) / 10 ;
       }
       else if( ACSCurrency.currentCurrency === "KRW" || ACSCurrency.currentCurrency === "JPY" || ACSCurrency.currentCurrency === "SEK" || ACSCurrency.currentCurrency === "HUF" || ACSCurrency.currentCurrency === "ISK") {
         var moneyraw = parseFloat($acs(this).html().replace(/[^0-9]/g, ""), 10) * 100 ;
       } else {
         var moneyraw = parseFloat($acs(this).html().replace(/[^0-9]/g, ""), 10)  ;
       }
       var moneyrounded = ((Math.round(moneyraw / 100)) - 1 + {{ settings.mlvedaACS_roundDecimalValue }}) * 100 ;
       if(ACSCurrency.format === "money_with_currency_format") {
         var acuree = ACSCurrency.formatMoney(moneyrounded, ACSCurrency.moneyFormats[ACSCurrency.currentCurrency].money_with_currency_format)
       }
       else {
         var acuree = ACSCurrency.formatMoney(moneyrounded, ACSCurrency.moneyFormats[ACSCurrency.currentCurrency].money_format)
       }        $acs(this).html(acuree);
     });    
}

{% if settings.mlvedaACS_hideDecimal %}
  var firstTimeSwitchFlag=0;
{% endif %}

var onetimecallflag = true;

$acs('span.money span.money').each(function() {
  $acs(this).parents('span.money').removeClass('money');
});

function mlvedaload() {

if(mlvedaFlagCalled){
{% if settings.mlvedaACS_currencyFormat %}
ACSCurrency.format = '{{ settings.mlvedaACS_currencyFormat }}';
{% endif %}

var shopCurrency = '{{ shop.currency }}';

/* Sometimes merchants change their shop currency, let's tell our JavaScript file */
ACSCurrency.moneyFormats[shopCurrency].money_with_currency_format = {{ shop.money_with_currency_format | strip_html | json }};
ACSCurrency.moneyFormats[shopCurrency].money_format = {{ shop.money_format | strip_html | json }};
  
{% if settings.mlvedaACS_hideDecimal %}
if(firstTimeSwitchFlag==0) {
  var local_supported_currencies = window.supported_currencies.split(" ");
  for(var i=0; i<local_supported_currencies.length; i++)
  {
    if(local_supported_currencies[i] !== shopCurrency && local_supported_currencies[i] !== "JOD" && local_supported_currencies[i] !== "KWD" && local_supported_currencies[i] !== "BHD" && local_supported_currencies[i] !== "JPY" ) {
      if(ACSCurrency.moneyFormats[local_supported_currencies[i]] && ACSCurrency.moneyFormats[local_supported_currencies[i]].money_with_currency_format.indexOf("amount_no_decimals") == -1) {
        ACSCurrency.moneyFormats[local_supported_currencies[i]].money_with_currency_format = ACSCurrency.moneyFormats[local_supported_currencies[i]].money_with_currency_format.replace("amount","amount_no_decimals");
        ACSCurrency.moneyFormats[local_supported_currencies[i]].money_format = ACSCurrency.moneyFormats[local_supported_currencies[i]].money_format.replace("amount","amount_no_decimals");
      }
    }
  }
  firstTimeSwitchFlag=1;
}
{% endif %}

/* Default currency */
var defaultCurrency = shopCurrency;
  
/* Cookie currency */
var cookieCurrency = null;//ACSCurrency.cookie.read();
var resetCurrencyCookie = mlvedaReadCookie("resetCurrencyCookie");
if (resetCurrencyCookie == null)
{
    cookieCurrency = null;
    mlvedaCreateCookie("resetCurrencyCookie", 1, 365);
}

  if(cookieCurrency == null) {
	if("undefined" != typeof window.temp_currency_array && window.temp_currency_array[0] !== window.mlvedadefaultcurrency && window.temp_currency_array[1] !== window.mlvedadefaultcurrency) {
  	  cookieCurrency = "{{ settings.mlvedaACS_defaultCurrency }}";
	}
	else {
  	  cookieCurrency = window.mlvedadefaultcurrency;
	}
  }

/* Fix for customer account pages */
$acs('span.money span.money').each(function() {
  $acs(this).parents('span.money').removeClass('money');
});

/* Saving the current price */
$acs('span.money').each(function() {
if(!$acs(this).attr('data-currency-{{ shop.currency }}'))
{
  $acs(this).attr('data-currency-{{ shop.currency }}', $acs(this).html());
}
});

// If there's no cookie.
if (cookieCurrency == null || cookieCurrency == shopCurrency) {
  if(cookieCurrency == shopCurrency) {
    ACSCurrency.currentCurrency = shopCurrency;
  }
  else if (shopCurrency !== defaultCurrency) {
    ACSCurrency.convertAll(shopCurrency, defaultCurrency);
	//console.log("From currencies : "+new Date().getTime());
  }
  else {
    ACSCurrency.currentCurrency = defaultCurrency;
  }
}

// If the cookie value does not correspond to any value in the currency dropdown.
else if ($acs('[name=currencies]').length && $acs('[name=currencies] option[value=' + cookieCurrency + ']').length === 0) {
  ACSCurrency.currentCurrency = shopCurrency;
  ACSCurrency.cookie.write(shopCurrency);
}
else if (cookieCurrency === shopCurrency) {
  ACSCurrency.currentCurrency = shopCurrency;
}
else {
  ACSCurrency.convertAll(shopCurrency, cookieCurrency);
  //console.log("From currencies : "+new Date().getTime());
  $acs(".mlvedaCartNote").css("display","block");
  roundCurrency();
}

$acs('[name=currencies]').val(ACSCurrency.currentCurrency).change(function() {
  var newCurrency = $acs(this).val();
  if(ACSCurrency.currentCurrency!=shopCurrency) {
    ACSCurrency.convertAll(ACSCurrency.currentCurrency, shopCurrency);
    ACSCurrency.convertAll(shopCurrency, newCurrency);
    //console.log("From currencies : "+new Date().getTime());
  }
  else {
    ACSCurrency.convertAll(ACSCurrency.currentCurrency, newCurrency);
	//console.log("From currencies : "+new Date().getTime());
  }
  
  $acs('.selected-currency').text(ACSCurrency.currentCurrency);
  if(newCurrency != shopCurrency) {
    roundCurrency();
    $acs(".mlvedaCartNote").css("display","block");
  } else {
    $acs(".mlvedaCartNote").css("display","none");
  }});

var original_selectCallback = window.selectCallback;
var selectCallback = function(variant, selector) {
  original_selectCallback(variant, selector);
  ACSCurrency.convertAll(shopCurrency, $acs('[name=currencies]').val());
  //console.log("From currencies : "+new Date().getTime());
  $acs('.selected-currency').text(ACSCurrency.currentCurrency);
};

$acs('.selected-currency').text(ACSCurrency.currentCurrency);

  if(onetimecallflag) {
  $acs('.single-option-selector').change(function() {
    mlvedaload();
  });

  $acs('.swatch').change(function() {
    mlvedaload();
  });

  $acs('.single-option-radio').change(function() {
    mlvedaload();
  });

if( typeof $ !== "undefined" ) {
  $(document).ajaxComplete(function(event, xhr, settings) {
     if(settings.url.indexOf("update.js")!=-1 || settings.url.indexOf("cart.js")!=-1 || settings.url.indexOf("add.js")!=-1 || settings.url.indexOf("change.js")!=-1) {
       setTimeout(function() {
         mlvedaload();
       }, 1000);
     }
   });
}

//$acs(".pick_currency:visible").css("height",$acs(".pick_currency").parent(":visible").height());
//$acs(".pick_currency:visible").css("line-height",$acs(".pick_currency").parent(":visible").height());
//$acs("[name=currencies]:visible").css("height",$acs(".pick_currency").parent(":visible").height());
//$acs("[name=currencies]:visible").css("line-height",$acs(".pick_currency").parent(":visible").height());

  $acs("#currencies").niceSelect();
  $acs("#currencies1").niceSelect();
  $acs("#currencies2").niceSelect();

  onetimecallflag = false;
  
  }
  
  $m("<style type=\"text/css\">span.money{ display: inline; }</style>").appendTo("head");

                        }
}
</script>

{% endif %}


{% endif %}